name: CI/CD for Anime Recommender App

on:
  push:
    branches: [main, master]  # Change to your branch name
  pull_request:
    branches: [main, master]

jobs:
  dockerbuild:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build The Docker Image
      run: docker build . --file Dockerfile --tag anime-recommender-app:$(date +%s)

  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # Match your Dockerfile
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install streamlit
        pip install -e .  # Install your setup.py
    - name: Run basic tests
      run: |
        python -c "import streamlit; print('Streamlit imported successfully')"
        # Add your actual tests here if you have pytest

  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}  # Use access token, not password
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/anime-recommender-app:latest
    - name: Image digest
      run: echo ${{ steps.build-and-publish.outputs.digest }}